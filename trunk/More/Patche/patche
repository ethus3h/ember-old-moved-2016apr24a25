#!/bin/bash
#Patche. Version 2, 2015-April-02
NOW="`date '+%Y.%m.%d-%H.%M.%S.%z'`"
outfile="./.pch/logs/$NOW.log"
mkdir ./.pch
mkdir ./.pch/logs
echo -e "Beginning work at $NOW.\nWrap arguments in single quotation marks.\nSuggested to run this as root. Run ia configure first." 2>&1 | tee -a $outfile

if [ "$1" = "init" ]; then
	echo "init" 2>&1 | tee -a $outfile
	PASSPHRASE="$2"
	REPOUUID="`uuidgen`"
	echo "$REPOUUID" > ./.pch/.uuid
	rm -rfv ./.pch/.pshadow/ 2>&1 | tee -a $outfile
	mkdir -v ./.pch 2>&1 | tee -a $outfile
	echo "$PASSPHRASE" > ./.pch/.pbz
	mkdir -v ./.pch/.ptub 2>&1 | tee -a $outfile
	mkdir -v ./.pch/.pshadow 2>&1 | tee -a $outfile
	rsync -av --progress --delete --write-batch="../$NOW.pinit" --exclude=".pch/.pshadow" . ./.pch/.pshadow/ 2>&1 | tee -a $outfile
	bzip2 "../$NOW.pinit" 2>&1 | tee -a $outfile
	mv -v "../$NOW.pinit.bz2" "../$NOW.pinit" 2>&1 | tee -a $outfile
	gpg --yes -c --cipher-algo AES256 --batch --passphrase-file ./.pch/.pbz "../$NOW.pinit" 2>&1 | tee -a $outfile
	mv -v "../$NOW.pinit.gpg" "../$NOW.pinite" 2>&1 | tee -a $outfile
	UUID="`uuidgen`"
	ia upload "$REPOUUID.$UUID" "../$NOW.pinite" --log --delete --checksum --metadata="title:Patche.$REPOUUID.$NOW.$UUID.pinite"
	echo -n "1" > ./.pch/.revision
	echo -n "$REPOUUID.$UUID $NOW" > "./.pch/.ptub/1. $NOW.pinitu"
	mv -v ./internetarchive.log "./.pch/logs/$NOW.ia.log" 2>&1 | tee -a $outfile
	rm -v "../$NOW.pinit" 2>&1 | tee -a $outfile


	else if [ "$1" = "clone" ]; then
		echo "clone" 2>&1 | tee -a $outfile
		IDENTIFIER="$2"
		FILENAME="$3"
		PASSPHRASE="$4"
		wget "https://archive.org/download/$2/$3.pinite" 2>&1 | tee -a $outfile
		mv -v "./$3.pinite" "./$3.pinit.gpg" 2>&1 | tee -a $outfile
		echo "$PASSPHRASE" > ./.pbz
		gpg --yes --batch --passphrase-file ./.pbz "./$3.pinit.gpg" 2>&1 | tee -a $outfile		
		#rm -v "./.pbz" 2>&1 | tee -a $outfile
		rm -v "./$3.pinit.gpg" 2>&1 | tee -a $outfile
		mv -v "./$3.pinit" "./$3.pinit.bz2" 2>&1 | tee -a $outfile
		bunzip2 "./$3.pinit.bz2" 2>&1 | tee -a $outfile
		rsync -av --progress --read-batch="./$3.pinit" . 2>&1 | tee -a $outfile
		rm -v "./$3.pinit" 2>&1 | tee -a $outfile
		rsync -av --progress --delete --exclude=".pch/.pshadow" . ./.pch/.pshadow/ 2>&1 | tee -a $outfile


		else if [ "$1" = "commit" ]; then
			echo "commit" 2>&1 | tee -a $outfile
			LASTREVISION="`cat ./.pch/.revision`"
			#help from http://askubuntu.com/questions/385528/how-to-increment-a-variable-in-bash
			THISREVISION=$(($LASTREVISION+1))
			rsync -av --progress --delete --write-batch="../$NOW.patch" --exclude=".pch/.pshadow" . ./.pch/.pshadow/ 2>&1 | tee -a $outfile
			bzip2 "../$NOW.patch" 2>&1 | tee -a $outfile
			mv -v "../$NOW.patch.bz2" "../$NOW.patch" 2>&1 | tee -a $outfile
			gpg --yes -c --cipher-algo AES256 --batch --passphrase-file ./.pch/.pbz "../$NOW.patch" 2>&1 | tee -a $outfile
			mv -v "../$NOW.patch.gpg" "../$NOW.patche" 2>&1 | tee -a $outfile
			UUID="`uuidgen`"
			REPOUUID="`cat ./.pch/.uuid`"
			ia upload "$REPOUUID.$UUID" "../$NOW.patche" --log --delete --checksum --metadata="title:Patche.$REPOUUID.$NOW.$UUID.patche"
			echo -n "$REPOUUID.$UUID $NOW" > "./.pch/.ptub/$THISREVISION. $NOW.pchu"
			echo -n "$THISREVISION" > ./.pch/.revision
			mv -v ./internetarchive.log "./.pch/logs/$NOW.ia.log" 2>&1 | tee -a $outfile
			rm -v "../$NOW.patch" 2>&1 | tee -a $outfile


			else if [ "$1" = "patch" ]; then
				echo "patch" 2>&1 | tee -a $outfile
				IDENTIFIER="$2"
				FILENAME="$3"
				PASSPHRASE="$4"
				wget "https://archive.org/download/$2/$3.patche" 2>&1 | tee -a $outfile
				mv -v "./$3.patche" "./$3.patch.gpg" 2>&1 | tee -a $outfile
				gpg --yes --batch --passphrase-file ./.pch/.pbz "./$3.patch.gpg" 2>&1 | tee -a $outfile		
				rm -v "./$3.patch.gpg" 2>&1 | tee -a $outfile
				mv -v "./$3.patch" "./$3.patch.bz2" 2>&1 | tee -a $outfile
				bunzip2 "./$3.patch.bz2" 2>&1 | tee -a $outfile
				rsync -av --progress --read-batch="./$3.patch" . 2>&1 | tee -a $outfile
				rm -v "./$3.patch" 2>&1 | tee -a $outfile
				rsync -av --progress --delete --exclude=".pch/.pshadow" . ./.pch/.pshadow/ 2>&1 | tee -a $outfile
				else
					echo "Unknown action or no action specified. Available actions are: init, clone, commit, patch" 2>&1 | tee -a $outfile
				fi
			fi
		fi
	fi


DONETIME="`date '+%Y.%m.%d-%H.%M.%S.%z'`"
echo "Done work at $DONETIME." 2>&1 | tee -a $outfile
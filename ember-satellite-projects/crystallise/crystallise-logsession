#!/bin/bash

# Do not run this script manually; use crystallise instead.

#Script should run as root.
[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"

#Script should exit if any operation fails.
set -e

echo "Arguments: " "$@"

title=$(sed '1q;d' "$HOME"/config.txt)
export title
collection=$(sed '2q;d' "$HOME"/config.txt)
export collection
passphrase=$(sed '3q;d' "$HOME"/config.txt)
export passphrase

export CrystalID="$1"

echo "The crystal will have the following address when it is ready: $CrystalID"

printf "%s" "$passphrase" > ./"$CrystalID".tmp

tar -cv --format pax -f ./"$CrystalID".pax $(pwd)/$CrystalID "$@"

xz -k -C sha256 -9 -e -v ./"$CrystalID".pax

rm -v ./"$CrystalID".pax

gpg --yes -c --cipher-algo AES256 --batch --passphrase-file "$CrystalID".tmp ./"$CrystalID".pax.xz

rm -v ./"$CrystalID".pax.xz

mv ./"$CrystalID".pax.xz.gpg ./"$CrystalID".coal5

echo "Sending..."

ia upload "$CrystalID" --metadata="subject:Uploaded using Crystallise $crystalliseVersion; 1EA21BD8-DB7E-11E5-9733-728C37852114; $title" --metadata="collection:$collection" --delete "$CrystalID".coal5

echo "Uploaded to https://archive.org/download/$CrystalID"

#Delete everything except log
echo "Cleaning up..."
rm -rv "${@:2}"

#Upload log file and passphrase file
# crystallise-logsession "$CrystalID" "$CrystalID".tmp 2>&1 /dev/null

# rm -v "$CrystalID" ./"$CrystalID".tmp

rm -v ./"$CrystalID".tmp

echo "Done! The new crystal's address is:"
echo "$CrystalID"
#!/bin/bash

PAGE="$(basename "$1" | cut -d. -f1)";
rm -rf "../../built/$1";
mkdir -p "../../built/$1";
rm -rf "../../built/$1";
cp "../assets/1_start.html" "../../built/$1";
cat "../content/$1" >> "../../built/$1";
cat "../assets/2_end.html" >> "../../built/$1";
html-minifier --output "../../built/$1" --remove-comments --use-short-doctype "../../built/$1";
tr '\n' ' ' < "../../built/$1" > "../../built/1.tmp";
tr '\t' ' ' < "../../built/1.tmp" > "../../built/2.tmp";
tr '\r' ' ' < "../../built/2.tmp" > "../../built/3.tmp";
tr -s " " < "../../built/3.tmp" > "../../built/$1";
echo "pt1";
perl -p -i -e 's/> </></g' "../../built/$1";
echo "pt2";
perl -p -i -e "s/nav-item-inactive $PAGE/nav-item-selected/g" "../../built/$1";
echo "pt3";
perl -p -e "s/^((?!^<h1 class=\"title\">([^<]+)<\/h1>).)*$//g" "../content/$1" > "../../built/4.tmp";
echo "pt4";
perl -p -i -e 's/^\s*//;s/\s*$//;s/\s+/ /;' "../../built/4.tmp"
cat "../../built/4.tmp";
perl -p -i -e "s/<h1 class=\"title\">([^<]+)<\/h1>.*/\\1/g" "../../built/4.tmp";
cat "../../built/4.tmp";
title="$(cat ../../built/4.tmp)";
ere_quote() {
    sed 's/[]\.|$(){}?+*^]/\\&/g' <<< "$*"
}
echo "pt5";
title="$(ere_quote $title)";
echo "pt6";
if [ -n "$title" ]; then
	echo "pt7";
	replace="s/<title>Futuramerlin<\/title>/<title>$title &mdash; Futuramerlin<\/title>/g";
	echo "$replace";
	perl -p -i -e "$replace" "../../built/$1";
	echo "pt8";
fi
echo "pt9";
perl -p -i -e "s/nav-item-inactive \w+/nav-item-inactive/g" "../../built/$1";
echo "pt10";
SLASHCOUNTTEMP="${1//[^\/]}";
SLASHCOUNT=${#SLASHCOUNTTEMP}
i=1;
d="";
while [[ (( $i < $SLASHCOUNT )) ]]; do
	d=$d"..\/";
	i=$((i+1));
done;
STRMATCH="s/href=\"([^:\"]+)\"/href=\"$d\\1\"/g";
perl -p -i -e "$STRMATCH" "../../built/$1";
rm -f ../../built/*.tmp;
